name: Default
on:
  push:
  pull_request:
  schedule:
    - cron: '7 */7 * * *'
  workflow_dispatch:
jobs:
  pre-commit:
    name: pre-commit (ubuntu-latest, 3.7)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Update pip, setuptools, and wheel
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install pylint
        run: python -m pip install pylint==2.5.3
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0
        #with:
        #  token: ${{ secrets.GITHUB_TOKEN }}
  default:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.7
          - 3.8
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update pip, setuptools, and wheel
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v2
      - name: Cache dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-2x4-${{ hashFiles('poetry.lock', '.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-python-${{ matrix.python-version }}-2x4-
      - name: Cache dependencies (MacOS)
        if: startsWith(matrix.os, 'macos')
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
            /Users/runner/Library/Caches/
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-2x4-${{ hashFiles('poetry.lock', '.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-python-${{ matrix.python-version }}-2x4-
      - name: Cache dependencies (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: actions/cache@v2
        with:
          path: |
            $HOME\.cache
            $HOME\AppData\Local\pypoetry\Cache
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-2x4-${{ hashFiles('poetry.lock', '.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-python-${{ matrix.python-version }}-2x4-
      - name: Install with dependencies
        run: |
          poetry --version
          poetry install
          poetry show
      - name: Run flake8 and pylint via pre-commit
        if: matrix.python-version != 3.7 || matrix.os != 'ubuntu-latest'
        run: |
          poetry run pre-commit run flake8 --all-files
          poetry run pre-commit run pylint --all-files
      - name: Build
        run: poetry build
