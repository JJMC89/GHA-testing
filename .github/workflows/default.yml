name: Python package
on:
  push:
  pull_request:
  schedule:
    - cron: '7 */7 * * *'
  workflow_dispatch:
jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.7
          - 3.8
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: 'Update pip, setuptools, and wheel'
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v2
      - name: Cache Poetry dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ matrix.os }}-python-${{ matrix.python-version }}-poetry-
      - name: Cache pre-commit dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-python-${{ matrix.python-version }}-pre-commit-
      - name: Install with dependencies
        run: |
          poetry --version
          poetry install
          poetry show
      - name: Run pre-commit (py37)
        if: matrix.python-version == 3.7
        run: poetry run pre-commit run --all-files
      - name: Run pre-commit (!py37)
        if: matrix.python-version != 3.7
        run: |
          echo ${{ matrix.python-version }}
          poetry run pre-commit run bandit --all-files
          poetry run pre-commit run flake8 --all-files
          poetry run pre-commit run pylint --all-files
